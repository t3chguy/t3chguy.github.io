<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[bit.ovh - a piece of my mind]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="https://bit.ovh/"/>
  <updated>2017-08-24T13:39:09.675Z</updated>
  <id>https://bit.ovh/</id>
  
  <author>
    <name><![CDATA[Michael Telatynski]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[GSoC Wrapup! 2017 Matrix.org]]></title>
    <link href="https://bit.ovh/2017/08/24/GSoC-Wrapup-2017-Matrix-org/"/>
    <id>https://bit.ovh/2017/08/24/GSoC-Wrapup-2017-Matrix-org/</id>
    <published>2017-08-24T14:16:56.000Z</published>
    <updated>2017-08-24T13:39:09.675Z</updated>
    <content type="html"><![CDATA[<p>The initial plan was to develop further bridges but since a lot of the community were already focussing efforts there, the Matrix.org team set me alternate tasks I could choose from. I was given the task to develop a way for Matrix to be indexable by search engines, as Riot.im is a really heavy React application that is not crawler friendly, so a client which had no client side scripting was desired. I was also tasked with squashing bugs and some substantial changes or fixes in riot-web, outlined below. The reason this was needed is that riot-web (riot.im) is a very heavy React web application, and the Google crawler simply is unable to index it. </p>
<a id="more"></a>
<p>Publications mentioning some of my work done during GSoC:</p>
<ul>
<li><a href="https://matrix.org/blog/2017/07/19/status-update/" target="_blank" rel="external">https://matrix.org/blog/2017/07/19/status-update/</a></li>
<li><a href="https://medium.com/@RiotChat/riot-web-0-11-is-here-3edbf9dbb7ed" target="_blank" rel="external">https://medium.com/@RiotChat/riot-web-0-11-is-here-3edbf9dbb7ed</a></li>
<li><a href="https://medium.com/@RiotChat/riot-web-and-desktop-version-0-10-0-is-here-e6147f5f576f" target="_blank" rel="external">https://medium.com/@RiotChat/riot-web-and-desktop-version-0-10-0-is-here-e6147f5f576f</a></li>
<li><a href="https://medium.com/@RiotChat/riot-web-and-desktop-version-0-9-10-is-here-a5b074f36741" target="_blank" rel="external">https://medium.com/@RiotChat/riot-web-and-desktop-version-0-9-10-is-here-a5b074f36741</a></li>
</ul>
<p>Most of my GSoC time was spent squashing bugs in the riot-web stack, matrix-react-sdk, matrix-js-sdk and a couple of other places. All major changes were merged into the origin repository, some are still pending merging at the time of writing. Large changes I made in the riot-web webapp include:</p>
<ul>
<li>Adding Piwik analytics, so that the devs can see how their app is being used and interacted with. This was done in a completely anonymous fashion with the ability to opt-out to appease the privacy protecting users. <a href="https://github.com/matrix-org/matrix-react-sdk/pull/1046" target="_blank" rel="external">[1]</a> <a href="https://github.com/matrix-org/matrix-react-sdk/pull/1046" target="_blank" rel="external">[2]</a></li>
<li>Adding support for Screen Sharing in Firefox, previously this was limited to Chromium. <a href="https://github.com/matrix-org/matrix-js-sdk/commit/0415b9cf4c81980c18038a6fbbc52794ac229e6d" target="_blank" rel="external">[1]</a></li>
<li>Adding support for choosing which microphone and webcam you would want Riot to use for VoIP calls. <a href="https://github.com/matrix-org/matrix-react-sdk/pull/850" target="_blank" rel="external">[1]</a></li>
<li>Adding the ability to hide specific events from the applications timeline which some people consider to be cluttering, this one was definitely much harder than it would seem, as hiding events naively simply would not work as it would break the rendering of compound elements like Membership Event Lists and also break Read Markers and Read Receipts. <a href="https://github.com/matrix-org/matrix-react-sdk/pull/1243" target="_blank" rel="external">[1]</a> <a href="https://github.com/matrix-org/matrix-react-sdk/pull/1308" target="_blank" rel="external">[2]</a></li>
<li>Many others…<ul>
<li><a href="https://github.com/vector-im/riot-web/commits/develop?author=t3chguy" target="_blank" rel="external">riot-web commits</a></li>
<li><a href="https://github.com/matrix-org/matrix-react-sdk/commits/develop?author=t3chguy" target="_blank" rel="external">matrix-react-sdk commits</a></li>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/commits/develop?author=t3chguy" target="_blank" rel="external">matrix-js-sdk commits</a></li>
</ul>
</li>
</ul>
<h2 id="Matrix-Static"><a href="#Matrix-Static" class="headerlink" title="Matrix-Static"></a>Matrix-Static</h2><p>Originally called, riot-static, is a project that allows people to peek into public Matrix rooms from any dumb web browser, as it uses no javascript whatsoever. Almost everything in this repository is my own work. There are a few closed PRs that my Mentor and I used for review comments. The repository has most recent code in the develop branch. The master branch is the current release. <a href="https://github.com/t3chguy/matrix-static" target="_blank" rel="external">https://github.com/t3chguy/matrix-static</a><br>Whilst it is in a working state, considered stable and even deployed at <a href="https://view.matrix.org/" target="_blank" rel="external">https://view.matrix.org/</a>, there are a bunch of open issues which are feature requests/todo items which I plan and intend to do after GSoC. During the design and creation of matrix-static I learnt a lot about Go, Matrix and threaded programming.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>The initial plan was to develop further bridges but since a lot of the community were already focussing efforts there, the Matrix.org team set me alternate tasks I could choose from. I was given the task to develop a way for Matrix to be indexable by search engines, as Riot.im is a really heavy React application that is not crawler friendly, so a client which had no client side scripting was desired. I was also tasked with squashing bugs and some substantial changes or fixes in riot-web, outlined below. The reason this was needed is that riot-web (riot.im) is a very heavy React web application, and the Google crawler simply is unable to index it. </p>]]>
    
    </summary>
    
      <category term="GSoC" scheme="https://bit.ovh/tags/GSoC/"/>
    
      <category term="Matrix" scheme="https://bit.ovh/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Installing [Matrix] Synapse on Debian/Ubuntu]]></title>
    <link href="https://bit.ovh/2017/06/10/Installing-Matrix-Synapse-on-Debian-Ubuntu/"/>
    <id>https://bit.ovh/2017/06/10/Installing-Matrix-Synapse-on-Debian-Ubuntu/</id>
    <published>2017-06-10T17:37:50.000Z</published>
    <updated>2017-06-10T17:00:47.293Z</updated>
    <content type="html"><![CDATA[<p>Whether it be for privacy or simply for fun, a time will come that you will want to set up a Matrix homeserver. Currently that pretty much means Synapse, as other solutions are less…”feature complete”, though the Readme does not really include enough information for less tech-savvy people to do so easily, so here is that information.</p>
<p>First things first, get ahold of a machine with 2GB+ RAM, modern enough CPU and some disk space. It’ll also need an IP Address, public if you wish to connect to it from anywhere, and optionally a domain if you don’t want to have to type the IP for everything. This guide will take you through installation, basic configuration and even setting up Let’s Encrypt Certificates in a fashion that you can copy and paste or dig deeper into and understand.</p>
<p>Make sure you log in as root for the installation, this just means that you will not have to authorize each and every action you do with <code>sudo</code>. This can often be done using the command <code>sudo su</code>. If you are using a VPS from the likes of DigitalOcean they often provide you direct access to the root user without sudo, though if you are new, be careful not to mistype things.</p>
<p>Next we will trust repository key and add the repository to apt’s repository list.</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -qO - <span class="keyword">https</span>://matrix.org/packages/debian/repo-key.asc | apt-key <span class="built_in">add</span> -</span><br><span class="line">apt-<span class="built_in">add</span>-repository <span class="keyword">http</span>://matrix.org/packages/debian/</span><br><span class="line">apt-<span class="built_in">get</span> update</span><br></pre></td></tr></table></figure>
<p>If it complains about <code>add-apt-repository: command not found</code> you should run <code>apt-get update &amp;&amp; apt-get install software-properties-common -y</code> and rerun the failed command.</p>
<p>At this stage the system knows about the Synapse package, and we can install it.<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install <span class="keyword">matrix</span>-synapse -<span class="literal">y</span></span><br></pre></td></tr></table></figure></p>
<p>The installer will ask you for a server name, enter what you would like to see as the server part of your username, often your domain.<br>If I wanted usernames like <code>user@bit.ovh</code> I would enter <code>bit.ovh</code>, this will even work if <code>bit.ovh</code> does not resolve to the server hosting synapse.<br>After this it will ask you about reporting analytics, this choice is up to you. Some time later, once apt is done installing Synapse you will see your prompt return and you can continue.</p>
<p>At this stage you will do any configurations you may need.<br>If you configured your server_name to be a domain which does not point at the server and wish to federate your server you will have to create an SRV record as detailed <a href="https://github.com/matrix-org/synapse#setting-up-federation" target="_blank" rel="external">here</a></p>
<h5 id="Lets_Encrypt_configuration_to_follow_2C_LAPTOP_DYING"><a href="#Lets_Encrypt_configuration_to_follow_2C_LAPTOP_DYING" class="headerlink" title="Lets Encrypt configuration to follow, LAPTOP DYING"></a>Lets Encrypt configuration to follow, LAPTOP DYING</h5><p>To start your new server you will have to run <code>service matrix-synapse start</code> assuming your distro ships with upstart/systemd/similar.</p>
<p>See more documentation at <a href="https://github.com/matrix-org/synapse" target="_blank" rel="external">https://github.com/matrix-org/synapse</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Whether it be for privacy or simply for fun, a time will come that you will want to set up a Matrix homeserver. Currently that pretty muc]]>
    </summary>
    
      <category term="Matrix" scheme="https://bit.ovh/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Installing Riot Desktop on Debian/Ubuntu]]></title>
    <link href="https://bit.ovh/2017/06/06/Installing-Riot-Desktop-on-Debian-Ubuntu/"/>
    <id>https://bit.ovh/2017/06/06/Installing-Riot-Desktop-on-Debian-Ubuntu/</id>
    <published>2017-06-06T14:20:19.000Z</published>
    <updated>2017-06-10T16:38:40.901Z</updated>
    <content type="html"><![CDATA[<p>The best way to get riot installed is to install it from the official repositories, this way your package manager can keep it up to date for you. All the info you need is on <a href="https://riot.im/desktop" target="_blank" rel="external">https://riot.im/desktop</a> but along with no instructions, the ones below should work for most users but do assume you have <code>wget</code>, <code>software-properties-common</code>, <code>sudo</code> and the <code>apt</code> wrapper.</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">set</span> -<span class="keyword">e</span></span><br><span class="line">wget -qO - https://riot.im/packages/debian/repo-<span class="keyword">key</span>.<span class="keyword">asc</span> | sudo apt-<span class="keyword">key</span> <span class="keyword">add</span> -</span><br><span class="line">sudo apt-<span class="keyword">add</span>-repository https://riot.im/packages/debian/</span><br><span class="line">sudo apt <span class="keyword">update</span></span><br><span class="line">sudo apt <span class="keyword">install</span> riot-web</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>The best way to get riot installed is to install it from the official repositories, this way your package manager can keep it up to date ]]>
    </summary>
    
      <category term="Matrix" scheme="https://bit.ovh/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Raspberry Pi Zero - Gadget Mode]]></title>
    <link href="https://bit.ovh/2016/01/31/Raspberry-Pi-Zero-Gadget-Mode/"/>
    <id>https://bit.ovh/2016/01/31/Raspberry-Pi-Zero-Gadget-Mode/</id>
    <published>2016-01-31T15:38:09.000Z</published>
    <updated>2016-01-31T22:08:29.000Z</updated>
    <content type="html"><![CDATA[<p>Previously, I’d have simply pointed someone to <a href="https://learn.adafruit.com/turning-your-raspberry-pi-zero-into-a-usb-gadget/overview" target="_blank" rel="external">this AdaFruit Article</a> as the Kernel Modules weren’t included in the stock kernel.<br>Not the case anymore, as the <a href="https://github.com/raspberrypi/linux" target="_blank" rel="external">Kernel GitHub Repository</a> currently has all the changes needed for USB Gadget Mode to function.<br><a id="more"></a><br>Most Raspberry Pi images include the utility <a href="https://github.com/Hexxeh/rpi-update" target="_blank" rel="external"><code>rpi-update</code></a>, using this tool and a one-liner, you can update your Kernel to a version which has the Modules required.<br><figure class="highlight bash"><figcaption><span>Update Kernel and load Kernel Mods</span><a href="/downloads/code/RPi0Gadget.sh">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Updates Kernel to next Branch</span></span><br><span class="line">sudo BRANCH=<span class="string">"next"</span> rpi-update;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Load Overlay</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"dtoverlay=dwc2"</span> | sudo tee <span class="operator">-a</span> /boot/config.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#Load one of the G_xxx Modules (g_ether in this case)</span></span><br><span class="line"><span class="comment">#dwc2 is required only when automatically loading a g_ module,</span></span><br><span class="line"><span class="comment">#due to dwc2 being autoloaded after /etc/modules is read.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"dwc2"</span> | sudo tee <span class="operator">-a</span> /etc/modules</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"g_ether"</span> | sudo tee <span class="operator">-a</span> /etc/modules</span><br><span class="line"></span><br><span class="line"><span class="comment">#Configure the new Network Interface to register over DHCP</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"allow-hotplug usb0"</span> | sudo tee <span class="operator">-a</span> /etc/network/interfaces</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"iface usb0 inet dhcp"</span> | sudo tee <span class="operator">-a</span> /etc/network/interfaces</span><br></pre></td></tr></table></figure><br>if you are using an image which does not come with rpi-update, don’t worry, its very easy to install - <a href="https://github.com/Hexxeh/rpi-update" target="_blank" rel="external">Check it out here</a></p>
<p>You can do all of this preperation (including rpi-update, which can be done from a different system with a mounted SD Card, see instructions at the rpi-update GitHub Page) before sticking the MicroSD Card into the Pi Zero, so that it can be ready to be accessed, updated and controlled via a single MicroUSB Cable. Fantastic!</p>
<p>Already have 2 Pi Zeros on my hands, got another one coming from Pimoroni that I won during one of their Bilge Tanks, and another from MagPi hopefully. 2 More on top of that and I’ll be building (and documenting) a simple Cluster of Raspberry Pi Zeros, that’ll be fun!</p>
<p>Refs:<br><a href="https://github.com/raspberrypi/linux/pull/1239" target="_blank" rel="external">GitHub PR for the Kernel Changes that are used here</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Previously, I’d have simply pointed someone to <a href="https://learn.adafruit.com/turning-your-raspberry-pi-zero-into-a-usb-gadget/overview">this AdaFruit Article</a> as the Kernel Modules weren’t included in the stock kernel.<br>Not the case anymore, as the <a href="https://github.com/raspberrypi/linux">Kernel GitHub Repository</a> currently has all the changes needed for USB Gadget Mode to function.<br>]]>
    
    </summary>
    
      <category term="Informational" scheme="https://bit.ovh/tags/Informational/"/>
    
      <category term="IoT" scheme="https://bit.ovh/tags/IoT/"/>
    
      <category term="Programmable" scheme="https://bit.ovh/tags/Programmable/"/>
    
      <category term="Raspberry Pi" scheme="https://bit.ovh/tags/Raspberry-Pi/"/>
    
      <category term="Technology" scheme="https://bit.ovh/tags/Technology/"/>
    
      <category term="Tutorial" scheme="https://bit.ovh/tags/Tutorial/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Pimoroni and pHat DAC]]></title>
    <link href="https://bit.ovh/2016/01/29/Pimoroni/"/>
    <id>https://bit.ovh/2016/01/29/Pimoroni/</id>
    <published>2016-01-29T22:27:57.000Z</published>
    <updated>2016-02-02T22:27:09.000Z</updated>
    <content type="html"><![CDATA[<p>How do I put this, these guys are simply fantastic. If you haven’t already, I suggest their weekly Live Stream, <code>Bilge Tank</code> over on YouTube, weekly on Thursday afternoons (Around 3PM UK Time). Not only do they show off cool stuff, answer your questions; they also do Giveaways. For example, during Bilge Tank 022, I answered a very simple question first and won myself a Raspberry Pi Zero pHat DAC Kit worth £30+Postage. Not only that but I’ve won quite a few freebies from these guys in the past and they offer decent prices with frequent store-wide discounts!</p>
<div class="video-container"><iframe src="//www.youtube.com/embed/epZfOcL393I" frameborder="0" allowfullscreen></iframe></div>
<a id="more"></a>
<hr>
<p>The Pirate-Monkey-Robot-Ninjas over at Pimoroni make quite a lot of their own stuff that is available all over the place and is generally pretty cool. They also happen to be a reseller of goods from the likes of Adafruit and are also one of the few places in the UK to get the Raspberry Pi Zero at its intended price, at the rare times it hasn’t yet sold out.</p>
<hr>
<h1 id="Update_3A"><a href="#Update_3A" class="headerlink" title="Update:"></a>Update:</h1><p>The pHat DAC Kit I won arrived today (via Tracked DPD Post, no Expenses Spared!!!)<br>I fiddled around, unable to decide how I want to stack it all up - desoldered a 2x20 header at one point, and drilled the corner holes of my Pi Zero and the pHat DAC to fit chunkier Nylon Bolts. I felt really picky but I’m truly happy with it. I did not receive this for review purposes, it was a giveaway, so I can talk crap about it if it happens to be rubbish, but unfortunately I can’t as it is really Awesome!<br>The DAC is suprisingly clear, it happens to be the same DAC as found in the HiFiBerry, so its just a smaller board. 192kHz, 24bit, Line-Level output. - <a href="http://learn.pimoroni.com/tutorial/phat/raspberry-pi-phat-dac-install" target="_blank" rel="external">Installation Instructions</a></p>
<hr>
<div class="figure fig-33" style="width:;"><a class="fancybox" href="image1.jpg" title="" data-fancybox-group=""><img class="fig-img" src="image1.jpg" alt=""></a></div>
<div class="figure fig-33" style="width:;"><a class="fancybox" href="image2.jpg" title="" data-fancybox-group=""><img class="fig-img" src="image2.jpg" alt=""></a></div>
<div class="figure fig-33" style="width:;"><a class="fancybox" href="image3.jpg" title="" data-fancybox-group=""><img class="fig-img" src="image3.jpg" alt=""></a></div>
<hr>
<p>The Kit came with:</p>
<ul>
<li>Raspberry Pi Zero</li>
<li>pHat DAC</li>
<li>Phono Connector</li>
<li>USB Shim</li>
<li>USB OTG Cable</li>
<li>MiniHDMI Adapter</li>
<li>3.5mm Cable</li>
<li>20x2 Female Header</li>
<li>20x2 Male Header</li>
<li>Official WiFi Adapter</li>
</ul>
<p>I soldered it pretty minimally at first, I ended up removing the header that you can see in the image above, in favour for a modified long pin one which you can see below. The thing sounds better than my ChromeCast Audio - very happy with it, also happy with the way it looked stacked ontop of my Pi Zero+PiBow Zero. The project the pirates suggested with this thing is an AirPlay receiver for some speakers which may not be internet-enabled, bringing new life to music around your home. Great value, simple to assemble and setup. Winner in my book.</p>
<p>Small Edit: Slight annoyance, the DAC seems to have no Hardware Audio Control, so you are limited to applications which are capable of Software Audio Control. Seems to be based on the HiFiBerry DAC rather than their DAC+. Still, a nice little package.</p>
<h6 id="Logos_and_Video_are_Intellectual_Property_of_Pimoroni_Ltd_2C_I_hope_this_post_only_has_the_effect_of_sponsoring_those_amazing_guys_some_more_21"><a href="#Logos_and_Video_are_Intellectual_Property_of_Pimoroni_Ltd_2C_I_hope_this_post_only_has_the_effect_of_sponsoring_those_amazing_guys_some_more_21" class="headerlink" title="Logos and Video are Intellectual Property of Pimoroni Ltd, I hope this post only has the effect of sponsoring those amazing guys some more!"></a>Logos and Video are Intellectual Property of Pimoroni Ltd, I hope this post only has the effect of sponsoring those amazing guys some more!</h6>]]></content>
    <summary type="html">
    <![CDATA[<p>How do I put this, these guys are simply fantastic. If you haven’t already, I suggest their weekly Live Stream, <code>Bilge Tank</code> over on YouTube, weekly on Thursday afternoons (Around 3PM UK Time). Not only do they show off cool stuff, answer your questions; they also do Giveaways. For example, during Bilge Tank 022, I answered a very simple question first and won myself a Raspberry Pi Zero pHat DAC Kit worth £30+Postage. Not only that but I’ve won quite a few freebies from these guys in the past and they offer decent prices with frequent store-wide discounts!</p>
<div class="video-container"><iframe src="//www.youtube.com/embed/epZfOcL393I" frameborder="0" allowfullscreen></iframe></div>]]>
    
    </summary>
    
      <category term="Arduino" scheme="https://bit.ovh/tags/Arduino/"/>
    
      <category term="Genuino" scheme="https://bit.ovh/tags/Genuino/"/>
    
      <category term="Raspberry Pi" scheme="https://bit.ovh/tags/Raspberry-Pi/"/>
    
      <category term="Shop" scheme="https://bit.ovh/tags/Shop/"/>
    
      <category term="Technology" scheme="https://bit.ovh/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[A little about me...]]></title>
    <link href="https://bit.ovh/2016/01/25/A-little-about-me/"/>
    <id>https://bit.ovh/2016/01/25/A-little-about-me/</id>
    <published>2016-01-25T20:08:20.000Z</published>
    <updated>2016-02-01T20:59:16.000Z</updated>
    <content type="html"><![CDATA[<p>I guess I should introduce myself, if you happen across this Blog then there may be that chance that you actually wish to know some details about me.<br><a id="more"></a><br>I’m a student, hoping to get into University in the next few months to spend the following 5 years of my life eating and dreaming Computer Science. Currently though, I attend Sixth Form studying Mathematics, Further Mathematics and Electronics A-Levels.</p>
<p>I enjoy tinkering and taking apart things that have the potential to teach me about their design, Amplifiers, Computers, Embedded Electronics, all that. I’m also a self-taught programmer and do a bit of freelance work to pay for things like the server hosting this Blog.</p>
<p>Preferences (without key, I’m sure you can work it out): Linux, Android, NGINX, Blue, NodeJS, EDM, Due, Logitech, Asus ROG, PCMR.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I guess I should introduce myself, if you happen across this Blog then there may be that chance that you actually wish to know some details about me.<br>]]>
    
    </summary>
    
      <category term="About Me" scheme="https://bit.ovh/tags/About-Me/"/>
    
      <category term="Informational" scheme="https://bit.ovh/tags/Informational/"/>
    
  </entry>
  
</feed>
